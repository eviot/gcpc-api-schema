syntax = "proto3";

package schema;
option go_package = "gapi";

import "token.proto";
import "device.proto";
import "device-type.proto";
import "flow.proto";
import "flow-descriptor.proto";
import "pipe.proto";
import "pipe-descriptor.proto";
import "plugin.proto";
import "helpers.proto";
import "any.proto";

service EviotService {

	// device registration in the system
	// rpc RegDevice(RegDeviceReq) returns (RegDeviceRes);
	// device authorization in the system
	// rpc AuthDevice(AuthDeviceReq) returns (AuthDeviceRes);
	// set device status: online or offline
	//rpc SetDeviceOnline(SetDeviceOnlineReq) returns (SetDeviceOnlineRes);

	rpc GetToken(GetTokenReq) returns (Token);

	rpc GetPlugin(GetPluginReq) returns (Plugin);
	rpc AddPlugin(AddPluginReq) returns (AddPluginRes);
	rpc UpdatePlugin(UpdatePluginReq) returns (UpdatePluginRes);
	rpc RemovePlugin(RemovePluginReq) returns (RemovePluginRes);
	rpc ListPlugins(ListPluginsReq) returns (ListPluginsRes);

	rpc GetFlow(GetFlowReq) returns (Flow);
	rpc AddFlow(AddFlowReq) returns (AddFlowRes);
	rpc SetFlowStatus(SetFlowStatusReq) returns (SetFlowStatusRes);
	rpc SetFlowVariable(SetFlowVariableReq) returns (SetFlowVariableRes);
	rpc SetFlowVariables(SetFlowVariablesReq) returns (SetFlowVariablesRes);
	rpc WatchFlowVariable(WatchFlowVariableReq) returns (stream WatchFlowVariableRes);
	// unimplemented
	rpc RemoveFlow(RemoveFlowReq) returns (RemoveFlowRes);
	rpc StartFlow(StartFlowReq) returns (StartFlowRes);
	// unimplemented
	rpc StopFlow(StopFlowReq) returns (StopFlowRes);

	rpc GetFlowDescriptor(GetFlowDescriptorReq) returns (FlowDescriptor);
	rpc AddFlowDescriptor(AddFlowDescriptorReq) returns (AddFlowDescriptorRes);
	rpc UpdateFlowDescriptor(UpdateFlowDescriptorReq) returns (UpdateFlowDescriptorRes);
	rpc RemoveFlowDescriptor(RemoveFlowDescriptorReq) returns (RemoveFlowDescriptorRes);
	// unimplemented
	rpc ListFlowDescriptors(ListFlowDescriptorsReq) returns (ListFlowDescriptorsRes);

	rpc GetPipeDescriptor(GetPipeDescriptorReq) returns (PipeDescriptor);
	rpc AddPipeDescriptor(AddPipeDescriptorReq) returns (AddPipeDescriptorRes);
	// unimplemented
	rpc UpdatePipeDescriptor(UpdatePipeDescriptorReq) returns (UpdatePipeDescriptorRes);
	rpc RemovePipeDescriptor(RemovePipeDescriptorReq) returns (RemovePipeDescriptorRes);
	rpc ListPipeDescriptors(ListPipeDescriptorsReq) returns (ListPipeDescriptorsRes);

	rpc GetDeviceType(GetDeviceTypeReq) returns (DeviceType);
	rpc AddDeviceType(AddDeviceTypeReq) returns (AddDeviceTypeRes);
	rpc UpdateDeviceType(UpdateDeviceTypeReq) returns (UpdateDeviceTypeRes);
	rpc RemoveDeviceType(RemoveDeviceTypeReq) returns (RemoveDeviceTypeRes);
	rpc ListDeviceTypes(ListDeviceTypesReq) returns (ListDeviceTypesRes);

	rpc GetDevice(GetDeviceReq) returns (Device);
	rpc AddDevice(AddDeviceReq) returns (AddDeviceRes);
	rpc UpdateDevice(UpdateDeviceReq) returns (UpdateDeviceRes);
	rpc RemoveDevice(RemoveDeviceReq) returns (RemoveDeviceRes);
	rpc ListDevices(ListDevicesReq) returns (ListDevicesRes);
}

// message RegDeviceReq {
// 	string deviceTypeID = 1;
// 	string userID = 2;
// }
// message RegDeviceRes {
// 	string deviceID = 1;
// }
// message AuthDeviceReq {
// 	string deviceID = 1;
// }
// message AuthDeviceRes {
// 	bool ok = 1;
// }
// message SetDeviceOnlineReq {
// 	string deviceID = 1;
// 	bool online = 2;
// }
// message SetDeviceOnlineRes {
// 	bool ok = 1;
// }

message GetTokenReq {
	oneof filter {
		string value = 1;
		string targetID = 2;
		string userID = 4;
	}
}

message StartFlowReq {
	string ID = 1;
}
message StartFlowRes {}

message StopFlowReq {
	string ID = 1;
}
message StopFlowRes {}


message GetPluginReq {
	string ID = 1;
}
message AddPluginReq {
	string name = 1;
	string pluginURI = 2;
}
message AddPluginRes {
	bool ok = 1;
	string ID = 2;
}
message UpdatePluginReq {
	string ID = 1;
	string name = 2;
	string pluginURI = 3;
}
message UpdatePluginRes {
	bool ok = 1;
}
message RemovePluginReq {
	string ID = 1;
}
message RemovePluginRes {
	bool ok = 1;
}
message ListPluginsReq {
	Filter filter = 1;
	Sort sort = 4;
	Page page = 5;
	message Filter {
		string name = 1;
		string userID = 2;
	}
	message Sort {
		SortDirection name = 2;
		SortDirection createdAt = 1;
	}
}
message ListPluginsRes {
	repeated Plugin plugins = 1;
}

message GetFlowReq {
	string ID = 1;
}
message AddFlowReq {
	string flowDescriptorID = 1;
}
message AddFlowRes {
	bool ok = 1;
	string ID = 2;
}
message SetFlowStatusReq {
	string ID = 1;
	FlowStatus status = 2;
}
message SetFlowStatusRes {
	bool ok = 1;
}
message SetFlowVariableReq {
	string ID = 1;
	string name = 2;
	Any value = 3;
}
message SetFlowVariableRes {
	bool ok = 1;
}
message SetFlowVariablesReq {
	string ID = 1;
	map<string, Any> variables = 2;
}
message WatchFlowVariableReq {
	// flow id
	string ID = 1;

	// variable name
	string name = 2;
}
message WatchFlowVariableRes {
	// variable value
	bytes jsonValue = 1;
}
message SetFlowVariablesRes {
	bool ok = 1;
}
message RemoveFlowReq {
	string ID = 1;
}
message RemoveFlowRes {
	bool ok = 1;
}

message GetFlowDescriptorReq {
	string ID = 1;
}
message AddFlowDescriptorReq {
	string name = 1;
	repeated FlowVariableDescriptor variables = 2;
	repeated Pipe pipes = 3;
}
message AddFlowDescriptorRes {
	bool ok = 1;
	string ID = 2;
}
message UpdateFlowDescriptorReq {
	string ID = 1;
	string name = 2;
	repeated FlowVariableDescriptor variables = 3;
	repeated Pipe pipes = 4;
}
message UpdateFlowDescriptorRes {
	bool ok = 1;
}
message RemoveFlowDescriptorReq {
	string ID = 1;
}
message RemoveFlowDescriptorRes {
	bool ok = 1;
}
message ListFlowDescriptorsReq {
	string userID = 1;
	Sort sort = 4;
	Page page = 5;
}
message ListFlowDescriptorsRes {
	repeated FlowDescriptor flowDescriptors = 1;
}

message GetPipeDescriptorReq {
	string ID = 1;
}
message AddPipeDescriptorReq {
	string name = 2;
	string pluginID = 3;
	string description = 4;
	repeated PipeDescriptorParam params = 5;
	repeated string inputs = 6;
	repeated string outputs = 7;
	bool needInit = 8;
}
message AddPipeDescriptorRes {
	bool ok = 1;
	string ID = 2;
}
message UpdatePipeDescriptorReq {
	string ID = 1;
	string name = 2;
	string pluginID = 3;
	string description = 4;
	repeated PipeDescriptorParam params = 5;
	repeated string inputs = 6;
	repeated string outputs = 7;
	bool needInit = 8;
}
message UpdatePipeDescriptorRes {
	bool ok = 1;
}
message RemovePipeDescriptorReq {
	string ID = 1;
}
message RemovePipeDescriptorRes {
	bool ok = 1;
}
message ListPipeDescriptorsReq {
	Filter filter = 1;
	Sort sort = 4;
	Page page = 5;
	message Filter {
		string name = 1;
		string pluginID = 2;
	}
	message Sort {
		SortDirection name = 2;
		SortDirection createdAt = 1;
	}
}
message ListPipeDescriptorsRes {
	repeated PipeDescriptor pipeDescriptors = 1;
}

message GetDeviceTypeReq {
	string ID = 1;
}
message AddDeviceTypeReq {
	string name = 2;
	string flowDescriptorID = 4;
}
message AddDeviceTypeRes {
	bool ok = 1;
	string ID = 2;
}
message UpdateDeviceTypeReq {
	string ID = 1;
	string name = 2;
}
message UpdateDeviceTypeRes {
	bool ok = 1;
}
message RemoveDeviceTypeReq {
	string ID = 1;
}
message RemoveDeviceTypeRes {
	bool ok = 1;
}
message ListDeviceTypesReq {
	Filter filter = 1;
	Sort sort = 4;
	Page page = 5;
	message Filter {
		string name = 1;
		string userID = 2;
	}
	message Sort {
		SortDirection name = 2;
		SortDirection createdAt = 1;
	}
}
message ListDeviceTypesRes {
	repeated DeviceType deviceTypes = 1;
}

message GetDeviceReq {
	string ID = 1;
}
message AddDeviceReq {
	string name = 2;
	string deviceTypeID = 3;
}
message AddDeviceRes {
	bool ok = 1;
	string ID = 2;
}
message UpdateDeviceReq {
	string ID = 1;
	string name = 2;
}
message UpdateDeviceRes {
	bool ok = 1;
}
message RemoveDeviceReq {
	string ID = 1;
}
message RemoveDeviceRes {
	bool ok = 1;
}
message ListDevicesReq {
	Filter filter = 1;
	Sort sort = 4;
	Page page = 5;
	message Filter {
		string name = 1;
		string userID = 2;
	}
	message Sort {
		SortDirection name = 2;
		SortDirection createdAt = 1;
	}
}
message ListDevicesRes {
	repeated Device devices = 1;
}
